1.边框
  围绕元素内容和内边距外的线条。
	1.简写方式
	  border:width style color;
		   width:边框宽度 以px为单位的数字
			 style:边框的样式 
			  取值：
				   solid:实线条
					 dotted:虚线条
					 dashed:虚线条
			 color:边框颜色 合法的颜色值 transparent 透明色
		练习1：
		  创建一个元素，id为main,给元素定义尺寸为200*200,并且设置四个方向的边框为1px的宽度，实线，orange颜色。

		注意：如果要取消边框，按照以下写法
		      border:none; 或border:0;
	2.单边定义
	  属性：border-方向：width style color;
		             方向：
								   top:上
									 bottom:下
									 left:左
									 right:右

		练习2：设置练习1中元素的上边框为2px,blue,dotted的样式。
	3.单属性设置
	  设置四条边框的某一个属性
		属性：border-width/style/color:值;

		练习3：在练习2基础上，将四个方向的样式全部修改为虚线（dashed）
	4.单边单属性
	  只设置某一个方向的某一个属性
	  属性：border-方向-属性:值;
		      方向：top/bottom/left/right
					属性：width/style/color

		练习4：将练习3中元素的下边框的颜色改为红色。
2.边框倒角
  将元素的直角倒成圆角
	属性：border-radius:值;
	取值：
	   数值 px
		 百分比 设置圆形时使用

	练习：
	  1.创建一个页面border-radius-02.html；
		2.创建一个元素id为main,设置尺寸为200*200；
		3.设置main的倒角半径为5px，观察结果；
		4.将main的倒角半径更改为50%,再观察结果；
		5.将main的宽度更为400px,再观察结果。

3.边框阴影
  属性：box-shadow
	取值：h-shadow v-shadow blur spread color inset;
	 h-shadow:阴影的水平偏移距离，必须值
	          取值为正，阴影向右偏移
						取值为负，阴影向左偏移
	 v-shadow:阴影的垂直偏移距离，必须值
	          取值为正，阴影向下偏移
						取值为负，阴影向上偏移
	 blur:模糊距离，取值越大，模糊效果越明显，以px为单位的数值
	 spread:阴影的大小，指定要在基础阴影上扩充出来的大小距离，取值以px为单位的数值
	 color:阴影颜色
	 inset:将默认的外阴影改成内阴影

	 练习：
	   在昨天溢出处理的作业基础之上
		    1.每幅图增加5px的倒角;
				2.每幅图在鼠标悬停时增加阴影效果，阴影向右下偏移5px,颜色为#ddd。
4.轮廓
  轮廓指的是边框的边框，绘制于边框外的线条。
	属性：
	   outline:width style color;
     width:宽度
		 style:线条样式
		 color:线条颜色
		 outline:none/0; 取消轮廓
	练习：
	  在页面上创建一个文本框，尝试着取消轮廓，查看效果。
5.框模型
  1.什么是框模型
	  框模型：box model,盒子模型，定义了元素框处理元素的内容，内边距，外边距以及边框的一种计算方式。
    外边距：元素框与元素框之间的距离。
		内边距：元素边框与内容之间的距离。
	  框模型默认的计算模式：
		    元素实际的占地宽度=左右外边距+左右边框+左右内边距+width
				元素实际的占地高度=上下外边距+上下边框+上下内边距+height
		1.外边距
		  1.什么是外边距？
			  围绕在元素边框外的空白距离，就是外边距
			2.语法
			  属性：margin定义某个元素的外边距
				margin:value；定义四个方向的外边距
				margin-top/bottom/right/left 单边定义
				取值：
           1.具体数字 以px为单位
				  练习：
				    1.创建一个网页margin-05.html;
					  2.创建两个div元素，分别设置id为d1,d2，尺寸为200*200，并设置边框;
					  3.设置第一个元素左外边距为20px,上外边距为20px;下外边距为20px.

					2.取值为负数
					  让元素向相反的方向移动
						margin-left 取值为正，让元素右移动
						            取值为负，让元素左移动
						margin-top  取值为正，让元素下移动
						            取值为负，让元素上移动
					3.取值为%
					  外边距的值，父元素的宽度和高度的占比
					4.取值为auto
					  自动，控制块级元素在水平方向居中对齐

				练习：
					在上面练习基础上，给第二个div设置外边距值为auto，查看效果。
			3.简写方式
			  1.margin:value 四个方向

				2.margin:v1 v2 
				  v1:上下外边距 v2:足有外边距
				
				3.margin:v1 v2 v3 
				  v1:上外边距 v2:左右 v3:下外边距

				4.margin:v1 v2 v3 v4
				  上 右 下 左（顺时针方向）
		  4.自带外边距的元素
			  h1-h6,p,ul,ol,dl,dd,pre,body
        通过css Reset(css重写)的手段，来重置具备外边距的元素。
				body,h1,h2,h3,h4,h5,h6,p,ul,ol,dl,dd,pre{
				  margin:0;
				}
			5.外边距的特殊效果
			  1.外边距合并
				  当两个垂直外边距相遇时，他们将合并成一个，最终的距离取决于两个外边距中距离较大的那个。
				2.外边距溢出
				  在某些特殊条件下，为子元素设置上外边距时，有可能会作用到父元素上。
					   1.父元素没有上边框
						 2.为第一个子元素设置外边距时
				练习：
				  1.创建一个margin-question-06.html；
					2.创建两个div元素，分别设置不同的背景颜色，两个div尺寸为200*200；
					3.在第二个div中添加一个子元素div，id为d3,设置其尺寸为100*100，以及背景色；
					4.设置d3的上外边距为50px,查看网页结果。
		    3.解决方案
				  1.为父元素增加上边框
					  弊端：对父元素的高度有影响
					2.使用父元素的上内边距来取代子元素的上外边距
					  弊端：对父元素的高度有影响
					3.在父元素的第一个子元素位置处，增加一个空<table></table>
				4.行内元素以及行内块元素垂直外边距
				   1.行内元素的垂直外边距无效（img除外）
					 2.行内块元素，设置垂直外边距时，整行元素都跟着发生改变
		2.内边距
		  1.什么是内边距？
			  元素边框与内容之间的空白间距
				内边距会扩大元素边框占地区域
			2.语法
			  属性：
				padding:value 四个方向的内边距
				padding-top/bottom/left/right:value; 单边设置
        取值：
				   1.以px为单位的数值
					 2.以%为单位的数值
				简写方式：
				   1.padding：value 
					   四个方向
					 2.padding:v1 v2
					   v1:上下
						 v2:左右
					 3.padding:v1 v2 v3
					   v1:上
						 v2:左右
						 v3:下
					 4.padding:v1 v2 v3 v4
					   上 右 下 左（顺时针）
			练习：
			  1.创建padding-07.html
				2.在页面中创建两个元素，d1和d2，尺寸200*200，并设置边框为2px solid #f00,随意编写文本内容。
				3.为d1元素增加上下左右四个方向的内边距各20px,观察结果。
	  3.属性：box-sizing
		  作用：指定框模型的计算方式
			取值：

			  1.content-box
				  默认值，采用默认的计算方式计算元素占地区域
				2.border-box
				  元素的尺寸，会包含border以及padding的值
					实际占地宽度=width(包含了border和padding)

					实际占地高度=height(包含了border和padding)

6.背景
  1.背景色
	  属性：background-color
		取值：合法的颜色值
		默认背景色和背景图片都是从边框位置处开始填充
	2.背景图像
	  属性：background-image
		取值：url(图片的路径);
	3.背景图像平铺
	  属性：background-repeat
		取值：
		  1.repeat 
			  默认值，横向和纵向同时平铺
			2.repeat-x
			  只站在水平方向平铺

			3.repeat-y
			  只在垂直方向平铺
			4.no-repeat
			  不平铺
	4.背景图像尺寸
		属性：background-size
		取值：
       1.width hegiht
			 2.width% height%
			 3.cover  
			   将背景图等比放大，直到背景图完全覆盖到元素的所有区域为止。
       4.contain
			   将背景图等比放大，直到背景图碰到元素的某一个边缘为止。
	5.背景图像固定
	  作用：将背景图像固定在网页的某个位置，一直在可视区域中，不会随着滚动条的滚动而发生位置的变化。
		属性：background-attachment
		取值：
		  1.scroll 默认值，滚动
			2.fixed 固定
	6.背景图像定位
	  作用：改变背景图像在元素中的位置
		属性：background-position
		取值：
		   1.x y
			   x:
				   背景图像水平偏移距离
					 取值为正，向右移动
					 取值为负，向左移动
				 y:
				   背景图像垂直偏移距离
					 取值为正，向下移动
					 取值为负，向上移动
			 2.x% y%
			   0% 0% 左上角
				 50% 50% 正中间
				 100% 100% 右下角

			 3.关键字
         x:left/center/right
				 y:top/center/bottom
			   
  7.背景的简写方式
	  属性：background
		取值：color url() repeat attachment position;
		background:red;
		background:url(a.jpg) center center;


		  