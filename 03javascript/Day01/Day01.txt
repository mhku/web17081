1、表单
	1、其他元素
		1、label元素
			作用：关联文本与表单控件的
			语法：
				标记：<label>文本</label>
				属性：
					1、for
						表示要与该元素关联的表单控件的ID值
		2、为控件分组
			<fieldset></fieldset> : 为控件分组
			<legend></legend> : 为分组指定标题 

		3、浮动框架
			1、作用
				允许在一个网页中，再引入另外一个网页进来
			2、语法
				标记：<iframe></iframe>
				属性：
					1、src
						要引入页面的URL
					2、width
					3、height
					4、frameborder
						浮动框架的边框宽度， 默认为1
	2、新表单控件元素
		1、什么是新表单控件元素
			在HTML5中新提出的控件
		2、详解
			1、电子邮件类型
				作用：表单提交时，会验证数据是否符合email的规范
				语法：<input type="email">
			2、搜索类型
				作用：提供了快速清除的功能
				语法：<input type="search">
			3、URL类型
				作用：提交时，验证数据是否符合url的规范
				语法：<input type="url">
			4、电话号码类型
				作用：在移动端设备中，显示效果为 "拨号键盘"
				语法：<input type="tel">
			5、数字类型
				作用：只能接受数字，并可以灵活调整数字的值
				语法：
					标记：<input type="number">
					属性：
						1、value ：控件的值
						2、min ：能够接收的最小数字值
						3、max ：能够接收的最大数字值
						4、step：每次调整数字时数字的变化范围
			6、范围类型
				作用：提供一个滑块组件，允许用户选取指定范围的值
				语法：
					标记：<input type="range">
					属性：
						1、min ：范围的最小值
						2、max ：范围的最大值
						3、step ：范围的步长
						4、value ：初始值
			7、颜色类型
				作用：提供一个颜色拾取控件
				语法：<input type="color">
			8、日期类型
				<input type="date">
			9、周类型
				<input type="week">
			10、月份类型
				<input type="month">
==================================================
JavaScript
1、JavaScript 概述
	1、什么是JavaScript
		JavaScript，简称为 JS,是一种运行于 JS解释器/引擎中的脚本语言

		JS的运行环境：
			1、独立安装的JS解释器
			2、嵌入在浏览器内核中的JS解释器

	2、JS的发展史
		1、1992年 Nombas 为自己的软件开发了一款脚本语言，可以运行在浏览器中的 ScriptEase
		2、1995年 Netscape(网景)，开发了另外一款脚本语言-LiveScript , 后期更名为 JavaScript
		3、1996年 Microsoft 在 IE3.0 中发布了JavaScrpt 的克隆版本 - JScript
		4、1997年 JavaScript 提交给了 ECMA(欧洲计算机制造商联合会),定义了 ECMAScript(ES)
	3、JS的组成
		完整的Javascript 是由三部分组成：
		1、核心(ECMAScript)
		2、DOM(Document Object Model) 文档对象模型
			提供了一组允许操作页面元素的函数和属性
		3、BOM(Browser Object Model) 浏览器对象模型
			提供了一组允许操作浏览器的函数和属性
	4、JS的特点
		1、语法类似于 C，Java
		2、无需编译，由JS解释器直接运行
		3、弱类型语言
		4、面向对象的
2、JavaScript 基础语法
	1、使用Javascript
		1、浏览器内核
			浏览器内核负责页面内容的渲染，由两部分组成
			1、内容排版引擎-解析HTML/CSS
			2、脚本解释引擎-解析JavaScript
		2、搭建JS运行环境
			1、独立安装的JS解释器 - NodeJS
				1、输入 node
				2、console.log("Hello World");
					向控制台上打印输出一句话
			2、使用浏览器内核中嵌入的JS解释器
				1、直接在Console中输入脚本并运行
				2、将JS脚本嵌入在HTML页面中执行
					1、html元素的事件执行JS脚本
						事件 - onclick - 鼠标单击元素时要执行的操作
					2、在<script>中编写脚本并执行
						网页的任意位置处，嵌入一对<script></script>,并且在<script></script>中，可以编写JS脚本
					3、使用外部脚本文件(***.js)
						1、创建脚本文件并编写JS代码
						2、在使用的网页上引用JS脚本文件
							<script src=""></script>
			练习：
				1、创建网页 05-jsbasic-exercise.html
				2、创建一个<script>标记，在网页中，以3级标题的方式打印输出自己的姓名
				3、创建一个按钮，为按钮添加单击事件，在控制台中，打印输出自己的姓名
				4、使用外部JS文件 05-exercise.js，完成上述两个步骤的内容
					1、在网页中，以3级标题的方式打印输出自己的姓名
					2、在控制台中，打印输出自己的姓名
		3、通用语法规范
			语句 ：可执行的最小单元
				必须以 ; 结束
				严格区分大小写
					Console.log(); 错误
					console.log(); 正确
				所有的符号必须是英文
					console.log("");
					console。log（“Hello World”）；
			注释 ：
				// ：单行注释
				/* */ ：多行注释
	2、变量 和 常量
		1、变量的声明
			1、声明变量
				var 变量名;
			2、为变量赋值
				变量名=值;
			3、声明变量时直接赋值
				var 变量名=值;
			注意：
				1、声明变量时可以不使用var，但不推荐
					uname="李文华";
				2、如果声明变量，但未赋值，则值默认为undefined
					var uname;
					console.log(uname); //undefined
				3、允许在一条语句中声明多个变量，用 , 隔开即可
					var uname="李文华",uage=40;
		2、变量名的命名规范
			1、不允许使用JS的关键字和保留关键字
			2、允许包含字母，数字，下划线(_)，$
				var $name="..."; 正确
				var #name="..."; 错误
			3、不能以数字开头
			4、最好见名知意
				var a;
				var uname;
			5、尽量使用 "小驼峰命名法"
				var uname;
				var userName;
				var userAge;

				var UserAge; //大驼峰
				var _userAge; //下划线
		3、变量的使用
			1、声明变量未赋值，值默认为undefined
			2、使用未声明过的变量，则为 报错
			3、赋值操作 - SET操作
				变量名出现在 = 的左边，一律是赋值操作
				var uname = "李文华";
				uname="WENHUA.LI";
			4、取值操作 - GET操作 
				变量只要没出现在 = 的左边，一律是取值操作
				var uname = "李文华";
				console.log(uname);
				var newName = uname;
					newName:赋值
					uname:取值

			注意：
				= 的运算方向，是从右向左运算，即将=右侧的所有内容都计算完成后，再赋值给=左侧的变量
		4、常量
			1、什么是常量
				在程序中，一经声明就不允许被修改的数据就是常量
			2、语法
				const 常量名=值;
				常量名在程序中，通常采用全大写形式
			3、练习
				1、创建一个09-const.html
				2、声明一个常量PI，并赋值为 3.14
				3、在控制台冲打印输出PI的值，格式如下
					常量PI的值为：3.14
				4、尝试改变 PI 的值为 31.4，观察结果
	3、数据类型
		1、数据类型的作用
			规定了数据在内存中所占的空间

			bit : 位
			byte : 字节
			kb : 千字节

			8bit = 1byte
			1024byte = 1kb
			1024kb = 1MB
			1024MB = 1GB
			1024GB = 1TB
		2、数据类型详解
			1、原始类型(基本类型)
				1、number类型
					数字类型
					作用：可以表示32位(4byte)的整数，也可以表示64位(8byte)浮点数(小数)
					整数：
						1、十进制
							由0-9十个数字组成，逢十进一
							var uage = 38;
						2、八进制
							由0-7八个数字组成，逢八进一
							var num = 010;
						3、十六进制
							由0-9，A-F 组成，逢十六进一
								A:10
								B:11
								C:12
								D:13
								E:14
								F:15
							var num = 0x10;
					浮点数：
						小数点计数法：123.456
						指数计数法：1.2e10,3.4e3
				2、string类型
					字符串类型
					作用：表示一系列的文本字符数据，如：姓名，性别，地址等... ...。字符串中的每个字符，都是由Unicode的字符，标点和数字组成
					Unicode码 ：每个字符(英文，数字，标点，中文，日文，韩文... ...)在计算机中都有一个唯一的码，表示该字符，称为Unicode码(十六进制)
					查找一个字符的Unicode码：
						"李".charCodeAt().toString(16)
					如何将Unicode码转换为汉字：
						比如：674e 对应的汉字？？？
						var str = "\u674e";
					汉字的Unicode码的范围：
					"\u4e00" ~ "\u9fa5"

					字符串在使用过程中，需要使用"" 或 '' 括起来
						var num1 = 12;
						var num2 = "12";
					特殊字符需要转义字符:
						\n : 换行
						\t : 制表符
						\" : "
						\' : '
						\\ : \
				3、boolean
					布尔类型
					作用：在程序中表示真或假的结果
					取值：true 或 false
					var isBig = true;
					var isRain = false;

					在参与到数学运算时，true可以当1做运算，false可以当0做运算
					var result = 25 + true; // 26
				4、undefined
					作用：
						表示使用的数据不存在
					场合：
						1、声明变量未赋值
							var num;
						2、试图访问对象的属性不存在
			2、引用类型



作业
	1、声明一个变量r,表示一个圆的半径，并赋值
	2、声明一个常量PI，表示圆周率并赋值3.14
	3、通过 r 和 PI 来计算该圆的周长，将结果保存在 变量 l 中
		周长 = 2 * π * 半径
	4、通过 r 和 PI 来计算该圆的面积，将结果保存在变量 s 中
		面积 = π * r * r
	5、在控制台中打印输出
		半径为 ** 的圆的周长为 **
		半径为 ** 的圆的面积为 **
















		